FORMAT: 1A

# Erweiterung
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor
invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et
accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata
sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur
sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna
aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea
rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit
amet.

# User1 [/user1]
User1 ...

## Login [POST /login]
Login with username and password.

+ Request (application/json)
    + Body
        {
            "username": "Peter",
            "password": "1234Hallo"
        }

    + Schema

            {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }

+ Response 200 (application/json)

    + Body

            {
                "token": "wn5934zn5vc973n4zc5384z5tzn349nzt3"
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            }

## Logout [POST /logout]
Logout.

+ Request

    + Headers

            Authorization: Bearer <token>

+ Response 200 (application/json)

    + Body

            {
                
            }

    + Schema

            {
                "type": "object",
                "properties": {
                    
                }
            }

## Get classification [GET /get-classification]
Get classification.

+ Request
    + Headers
            Authorization: Bearer <token>

+ Response 200 (application/json)
    + Attributes (object)
        + result: true (boolean, required)
        + kind (enum)
            + `A`
            + `B`
